"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var args = require("../../../lib/arguments");
var extPubBase = require("./default");
var trace = require("../../../lib/trace");
function getCommand(args) {
    return new ExtensionPublisherDelete(args);
}
exports.getCommand = getCommand;
var ExtensionPublisherDelete = /** @class */ (function (_super) {
    __extends(ExtensionPublisherDelete, _super);
    function ExtensionPublisherDelete() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = "Delete a Visual Studio Marketplace publisher";
        _this.serverCommand = true;
        return _this;
    }
    ExtensionPublisherDelete.prototype.getHelpArgs = function () {
        return ["publisher"];
    };
    ExtensionPublisherDelete.prototype.setCommandArgs = function () {
        _super.prototype.setCommandArgs.call(this);
        this.registerCommandArgument("publisher", "Publisher ID", "ID of Publisher to delete.", args.StringArgument);
    };
    ExtensionPublisherDelete.prototype.exec = function () {
        var galleryApi = this.webApi.getGalleryApi(this.webApi.serverUrl);
        return this.commandArgs.publisher.val().then(function (publisherName) {
            return galleryApi.deletePublisher(publisherName).then(function () {
                return {
                    publisher: {
                        publisherName: publisherName,
                    },
                };
            });
        });
    };
    ExtensionPublisherDelete.prototype.friendlyOutput = function (data) {
        trace.success("\n=== Completed operation: delete publisher ===");
        trace.info(" - Name: %s", data.publisher.publisherName);
    };
    return ExtensionPublisherDelete;
}(extPubBase.ExtensionPublisherBase));
exports.ExtensionPublisherDelete = ExtensionPublisherDelete;
//# sourceMappingURL=delete.js.map